server:
  port: 8086

spring:
  application:
    name: notification-service

  # Enable ANSI colors in console output
  output:
    ansi:
      enabled: always

  datasource:
    url: jdbc:postgresql://localhost:5432/notification_service_db
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    placeholder-replacement: false
  
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: notification-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:user}
    password: ${RABBITMQ_PASSWORD:password}
    virtual-host: ${RABBITMQ_VHOST:/}
    connection-timeout: 60000
    listener:
      simple:
        concurrency: 3
        max-concurrency: 10
        prefetch: 10
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          multiplier: 2

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    tags-sorter: alpha
    operations-sorter: alpha
  show-actuator: true

logging:
  level:
    org.de013.notificationservice: DEBUG

# Notification service configuration
notification:
  scheduler:
    enabled: true
  queue:
    ttl: 3600000  # 1 hour
    max-retry: 3
  email:
    enabled: true
    default-sender: noreply@ecommerce.com
    default-sender-name: E-Commerce Platform
    rate-limit: 100
    max-retries: 3
    retry-delay-seconds: 60
  sms:
    enabled: true
    mock-mode: true
    provider-name: MOCK_SMS
    rate-limit: 50
    max-retries: 3
    retry-delay-seconds: 120
    max-message-length: 160
  push:
    enabled: true
    mock-mode: true
    rate-limit: 200
    max-retries: 3
    retry-delay-seconds: 60
    default-sound: default
    default-badge: 1
  inapp:
    enabled: true
    rate-limit: 500
    show-badge: true
    auto-hide: true
    auto-hide-delay-seconds: 5
    play-sound: true
    sound-file: notification.mp3
    enable-actions: true
    max-notifications-per-user: 100
